{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    \"class\": _normalizeClass(['badge', $setup.className])\n  }, _toDisplayString($setup.text), 3\n  /* TEXT, CLASS */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAAmD,MAAnD,EAAmD;IAA5C,SAAKC,0BAAYC,gBAAZ;EAAuC,CAAnD,mBAAsCA,YAAtC,EAA0C;EAAA;EAA1C","names":["_createElementBlock","_normalizeClass","$setup"],"sourceRoot":"","sources":["C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\src\\components\\ui\\AppStatus.vue"],"sourcesContent":["<template>\n  <span :class=\"['badge', className]\">{{text}}</span>\n</template>\n\n<script>\nimport {ref, watch} from 'vue'\n\nexport default {\n  props: {\n    type: {\n      type: String,\n      required: true,\n      validator(value) {\n        return ['active', 'cancelled', 'done', 'pending'].includes(value)\n      }\n    }\n  },\n  setup(props) {\n    const classesMap = {\n      active: 'primary',\n      cancelled: 'danger',\n      done: 'primary',\n      pending: 'warning'\n    }\n\n    const textMap = {\n      active: 'Активен',\n      cancelled: 'Отменен',\n      done: 'Завершен',\n      pending: 'Выполняется'\n    }\n\n    watch(props, val => {\n      className.value = classesMap[val.type]\n      text.value = textMap[val.type]\n    })\n\n    const className = ref(classesMap[props.type])\n    const text = ref(textMap[props.type])\n\n    return {\n      className,\n      text\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}