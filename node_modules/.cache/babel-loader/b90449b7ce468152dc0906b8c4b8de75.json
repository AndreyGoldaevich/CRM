{"remainingRequest":"C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\src\\store\\modules\\request.module.js","dependencies":[{"path":"C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\src\\store\\modules\\request.module.js","mtime":1650308228642},{"path":"C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652726598100},{"path":"C:\\Users\\Андрей\\Desktop\\Vue 3 2021 Владилен Минин\\014_2\\node_modules\\babel-loader\\lib\\index.js","mtime":1652726599643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Андрей/Desktop/Vue 3 2021 Владилен Минин/014_2/src/store/modules/request.module.js"],"names":["axios","store","namespaced","state","requests","mutations","setRequests","addRequest","request","push","actions","create","payload","commit","dispatch","token","getters","post","data","id","name","value","type","root","message","load","get","Object","keys","map","loadOne","remove","update","put"],"mappings":"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","sourcesContent":["import axios from '../../axios/request'\nimport store from '../index'\n\nexport default {\n  namespaced: true,\n  state() {\n    return {\n      requests: []\n    }\n  },\n  mutations: {\n    setRequests(state, requests) {\n      state.requests = requests\n    },\n    addRequest(state, request) {\n      state.requests.push(request)\n    }\n  },\n  actions: {\n    async create({ commit, dispatch }, payload) {\n      try {\n        const token = store.getters['auth/token']\n        const {data} = await axios.post(`/requests.json?auth=${token}`, payload)\n        commit('addRequest', {...payload, id: data.name})\n        dispatch('setMessage', {\n          value: 'Заявка успешно создана',\n          type: 'primary'\n        }, {root: true})\n      } catch (e) {\n        dispatch('setMessage', {\n          value: e.message,\n          type: 'danger'\n        }, {root: true})\n      }\n    },\n    async load({ commit, dispatch }) {\n      try {\n        const token = store.getters['auth/token']\n        const {data} = await axios.get(`/requests.json?auth=${token}`)\n        const requests = Object.keys(data).map(id => ({...data[id], id}))\n        commit('setRequests', requests)\n      } catch (e) {\n        dispatch('setMessage', {\n          value: e.message,\n          type: 'danger'\n        }, {root: true})\n      }\n    },\n    async loadOne({ commit, dispatch }, id) {\n      try {\n        const token = store.getters['auth/token']\n        const {data} = await axios.get(`/requests/${id}.json?auth=${token}`)\n        return data\n      } catch (e) {\n        dispatch('setMessage', {\n          value: e.message,\n          type: 'danger'\n        }, {root: true})\n      }\n    },\n    async remove({ dispatch }, id) {\n      try {\n        const token = store.getters['auth/token']\n        await axios.delete(`/requests/${id}.json?auth=${token}`)\n        dispatch('setMessage', {\n          value: 'Заявка удалена',\n          type: 'primary'\n        }, {root: true})\n      } catch (e) {\n        dispatch('setMessage', {\n          value: e.message,\n          type: 'danger'\n        }, {root: true})\n      }\n    },\n    async update({ dispatch }, request) {\n      try {\n        const token = store.getters['auth/token']\n        await axios.put(`/requests/${request.id}.json?auth=${token}`, request)\n        dispatch('setMessage', {\n          value: 'Заявка обновлена',\n          type: 'primary'\n        }, {root: true})\n      } catch (e) {\n        dispatch('setMessage', {\n          value: e.message,\n          type: 'danger'\n        }, {root: true})\n      }\n    }\n  },\n  getters: {\n    requests(state) {\n      return state.requests\n    }\n  }\n}"]}]}